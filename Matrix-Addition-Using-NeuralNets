import numpy as np
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

#generate training data



def generate_data(num_samples):
  A = np.random.randint(0, 10, size = (num_samples, 4))
  B = np.random.randint(0, 10, size=(num_samples, 4))
  x = np.concatenate((A, B), axis=1)
  y = A + B
  return x, y

x_train, y_train = generate_data(1000)

model = Sequential()
model.add(Dense(16, input_dim=8, activation='relu'))
model.add(Dense(16, activation='relu'))
model.add(Dense(4, activation='linear'))

model.compile(optimizer='Adam', loss='mean_squared_error') # Fixed loss function name

model.fit(x_train, y_train, epochs=100, batch_size=32, verbose=1)

def predict_sum(matrix_a, matrix_b):
  pass
